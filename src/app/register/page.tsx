"use client";

// =======================================================================================
// ü©∏ UNIFIED REGISTRATION PAGE - Donor & Hospital Registration
// =======================================================================================
//
// This is a unified registration system featuring:
// üë• User type selection (Donor/Hospital)
// üìã Dynamic form based on user type
// üìÑ PDF document upload for verification
// üè• City/Governorate selection
// ü©∏ Blood type selection (donors only)
// üíº Tax/Commercial info (hospitals only)
// üì± Mobile-responsive design
// üîê Secure file handling
// üé® Modern UI with excellent UX
//
// Design Philosophy:
// - Clean, maintainable code structure
// - Type-safe implementation
// - Professional medical interface
// - Accessible and intuitive
// - Secure document handling
// =======================================================================================

import type { DonorRegistrationResponse } from "@/types/donor";
import type { HospitalRegistrationResponse } from "@/types/hospital";
import { useRouter } from "next/navigation";
import { useState } from "react";

// Components
import DonorRegistrationForm from "@/components/registration/DonorRegistrationForm";
import HospitalRegistrationForm from "@/components/registration/HospitalRegistrationForm";
import { RegistrationHeader } from "@/components/registration/layout/RegistrationHeader";
import { RegistrationLayout } from "@/components/registration/layout/RegistrationLayout";
import { RegistrationFormWrapper } from "@/components/registration/RegistrationFormWrapper";
import RegistrationSuccess from "@/components/registration/RegistrationSuccess";
import { UserTypeSelection } from "@/components/registration/UserTypeSelection";

type UserType = "donor" | "hospital" | null;
type RegistrationData =
  | DonorRegistrationResponse
  | HospitalRegistrationResponse;

// =======================================================================================
// üéØ MAIN REGISTRATION PAGE COMPONENT
// =======================================================================================
export default function RegisterPage() {
  const router = useRouter();
  const [selectedUserType, setSelectedUserType] = useState<UserType>(null);
  const [isSuccess, setIsSuccess] = useState(false);
  const [registrationData, setRegistrationData] =
    useState<RegistrationData | null>(null);

  const handleRegistrationSuccess = (data: RegistrationData) => {
    setRegistrationData(data);
    setIsSuccess(true);
  };

  const handleBackToLogin = () => {
    router.push("/login");
  };

  const handleBackToSelection = () => {
    setSelectedUserType(null);
  };

  // Show success screen if registration is complete
  if (isSuccess) {
    return (
      <RegistrationSuccess
        data={registrationData}
        onBackToLogin={handleBackToLogin}
      />
    );
  }

  return (
    <RegistrationLayout>
      {!selectedUserType ? (
        // User Type Selection Screen
        <>
          <RegistrationHeader
            title="ÿßŸÜÿ∂ŸÖ ŸÑŸÖŸÜÿµÿ© ÿ•ÿ≠Ÿäÿßÿ°"
            description="ÿßÿÆÿ™ÿ± ŸÜŸàÿπ ÿßŸÑÿ≠ÿ≥ÿßÿ® ÿßŸÑŸÖŸÜÿßÿ≥ÿ® ŸÑŸÉ"
          />
          <UserTypeSelection
            onSelectUserType={setSelectedUserType}
            onBackToLogin={handleBackToLogin}
          />
        </>
      ) : (
        // Registration Form Screen
        <>
          <RegistrationHeader
            title={
              selectedUserType === "donor"
                ? "ÿ™ÿ≥ÿ¨ŸäŸÑ ŸÖÿ™ÿ®ÿ±ÿπ ÿ¨ÿØŸäÿØ"
                : "ÿ™ÿ≥ÿ¨ŸäŸÑ ŸÖÿ§ÿ≥ÿ≥ÿ© ÿ∑ÿ®Ÿäÿ© ÿ¨ÿØŸäÿØÿ©"
            }
            description={
              selectedUserType === "donor"
                ? "ÿ≥ÿßŸáŸÖ ŸÅŸä ÿ•ŸÜŸÇÿßÿ∞ ÿßŸÑÿ£ÿ±Ÿàÿßÿ≠ ŸÖŸÜ ÿÆŸÑÿßŸÑ ÿßŸÑÿ™ÿ®ÿ±ÿπ ÿ®ÿßŸÑÿØŸÖ"
                : "ÿßŸÜÿ∂ŸÖ ŸÑÿ¥ÿ®ŸÉÿ© ÿßŸÑŸÖÿ§ÿ≥ÿ≥ÿßÿ™ ÿßŸÑÿ∑ÿ®Ÿäÿ© ÿßŸÑŸÖÿπÿ™ŸÖÿØÿ© (ŸÖÿ≥ÿ™ÿ¥ŸÅŸäÿßÿ™ Ÿàÿ®ŸÜŸàŸÉ ÿØŸÖ)"
            }
          />
          <RegistrationFormWrapper
            onBackToSelection={handleBackToSelection}
            onBackToLogin={handleBackToLogin}
          >
            {selectedUserType === "donor" ? (
              <DonorRegistrationForm onSuccess={handleRegistrationSuccess} />
            ) : (
              <HospitalRegistrationForm onSuccess={handleRegistrationSuccess} />
            )}
          </RegistrationFormWrapper>
        </>
      )}
    </RegistrationLayout>
  );
}
